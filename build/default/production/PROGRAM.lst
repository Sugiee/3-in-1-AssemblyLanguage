MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ; operating BUILD CONFIGURATIONS drop down menu in the DEBUG toolbar
                      00002 ; FOR SIMULATIONS with MPLAB SIM: select "Debug" this will switch off delays that take thousands of inst
                            ructions
                      00003 ; HARDWARE: select "Release" all delays will be on
                      00004 
                      00005 ; Provided code - do not edit  
                      00006 ; This include setups up various configuration bits for the microcontroller
                      00007 ; we are using, and importantly reserves space for variables.
                      00008 ; If you need to use more variables, please place them in VAR.INC, which you
                      00009 ; can find under the "Header Files" folder. The variables listed there will be
                      00010 ; placed in the first memory bank.
                      00011 ; This code has been provided for you to simplify your work, but you should be
                      00012 ; aware that you cannot ignore it.
                      00013 #include        ECH_1.inc
                      00001 
                      00002 ; ECH_1.inc - to be put before your SUBROUTINES         
                      00003 
                      00004 
                      00005 ; DEFINITIONS related to the PIC and board used
                      00006 ; DO NOT EDIT ! ! !
                      00007 
                      00008 
                      00009 ; this #include enables use of register and bit names from the datasheet
                      00010 ; consists of 
                      00011 ; SymbolicName EQU NumericalValue   ; equates symbolic names to appropriate bit patterns
                      00012 #include <p16F887.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ; Build date : Jan 06 2020
                      00005 ;  MPASM PIC16F887 processor include
                      00006 ; 
                      00007 ;  (c) Copyright 1999-2020 Microchip Technology, All rights reserved
                      00008 ;==========================================================================
                      00009 
                      00810         LIST
                      00013 ; ! the name of the file should match the PIC microcontroller part name
                      00014 
                      00015 
                      00016 ; setting the CONFIG1 configuration bits - required, explained at the end of the lecture course
2007   00A4           00017         __CONFIG        _CONFIG1, _INTOSCIO & _WDT_OFF & _PWRTE_ON & _MCLRE_ON & _CP_ON & _CPD_OFF & _BO
                            R_OFF & _IESO_OFF & _FCMEN_OFF & _LVP_OFF & _DEBUG_ON
                      00018 ;       configuration bits from the original Microchip code
                      00019 ;       __CONFIG    _CONFIG1, _LVP_OFF & _FCMEN_OFF & _IESO_OFF & _BOR_OFF & _CPD_OFF & _CP_OFF & _MCLRE
                            _OFF & _PWRTE_ON & _WDT_OFF & _INTRC_OSC_NOCLKOUT
                      00020 ;
                      00021 ; _INTOSCIO - use internal 4 MHz oscillator, RA6 and RA7 pins are used for I/O
                      00022 ; _WDT_OFF - the watchdog timer is DISABLED and can be enabled by SWDTEN bit of the WDTCON register
                      00023 ; _PWRTE_ON - power up timer - ENABLED
                      00024 ; _MCLRE_ON - master clear pin function - ENABLED
                      00025 ; _CP_OFF - program memory protection - DISABLED
                      00026 ; _CPD_OFF - EEPROM protection - DISABLED
                      00027 ; _BOR_OFF - brown out reset - DISABLED
MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00028 ; _IESO_OFF - internal external oscillator switchover - DISABLED
                      00029 ; _FCMEN_OFF - fail safe clock monitor - DISABLED
                      00030 ; _LVP_OFF - low voltage programming - DISABLED
                      00031 ; _DEBUG_ON - in circuit debugger - ENABLED, pins RB6 and RB7 are used by it
                      00032 ; (these and all the other available options are specified in the p16F887.inc file
                      00033 ; ! the best practice is to ALWAYS specify all the bits in the code
                      00034 
                      00035 ; setting the CONFIG2 configuration bits - required, explained at the end of the lecture course
2008   3EFF           00036         __CONFIG        _CONFIG2, _WRT_OFF & _BOR21V
                      00037 ;       as in the Microchip original code
                      00038 ;
                      00039 ; _WRT_OFF - program memory self write function - OFF
                      00040 ; _BOR21V - brown out reset voltage set to 2.1 V (this feature is disabled anyway in CONFIG1 above)
                      00041 
                      00042 
                      00043 #include                ECH_EQU.inc     ; for EQU statements related to the 44 pin demo board wiring of 
                            PORTD and RB0
                      00001 ;       symbolic name for the port connected to LEDs (PORTD)
  00000008            00002 LEDs    EQU             PORTD
                      00003 ;       symbolic names for individual LEDs for BSF and BCF
  00000000            00004 LD0             EQU             0
  00000001            00005 LD1             EQU             1
  00000002            00006 LD2             EQU             2
  00000003            00007 LD3             EQU             3
  00000004            00008 LD4             EQU             4
  00000005            00009 LD5             EQU             5
  00000006            00010 LD6             EQU             6
  00000007            00011 LD7             EQU             7
                      00012 ;
                      00013 ; e.g.  BSF             LEDs, LD3       ; to switch LD3 on
                      00014 ;               BCF             LEDs, LD5       ; to switch LD5 off
                      00015 
                      00016 ; use the following macros to test the switch
                      00017 #define skipRel         btfss PORTB,RB0 ; skip the next instruction if button is released
                      00018 #define skipPre         btfsc PORTB,RB0 ; skip the next instruction if the button is pressed
                      00044 
                      00045 
                      00046 ; ALLOCATION of user RAM, starts where SFRs end at 0x20
                      00047 gr1             udata           ; GPRs for bank 1                                                       
                      00048                 include         VAR.inc         ; YOUR VARIABLES from this file
                      00001 ; list names of your variables one in a row below
                      00002 ; each of them will be allocated a GPR
                      00003 ; and can be referenced by name in your code
                      00004 ; (the assembler will place actual address automatically)
                      00005 ; examples:
                      00006 ;Ctr1   RES     1       ; your vaiable, e.g., for counter 1
                      00007 ;Ctr2   RES     1
                      00008 ;------------------------------------------------------------------------------------------
                      00009 ;   mode and config
                      00010 ;------------------------------------------------------------------------------------------
0000                  00011 config11    RES 1
0001                  00012 config12    RES 1
0002                  00013 config13    RES 1
MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003                  00014 config21    RES 1
0004                  00015 config22    RES 1
0005                  00016 config31    RES 1
0006                  00017 modefinal   RES 1
0007                  00018 modestart   RES 1
                      00019 ;------------------------------------------------------------------------------------------
                      00020 ;   v_pwm
                      00021 ;------------------------------------------------------------------------------------------
0008                  00022 dc          RES 1
0009                  00023 otherdc     RES 1
000A                  00024 smalldc     RES 1
000B                  00025 bigdc       RES 1
000C                  00026 pwmc        RES 1
                      00027 ;------------------------------------------------------------------------------------------
                      00028 ;   strobe
                      00029 ;------------------------------------------------------------------------------------------
000D                  00030 strobe_tracker  RES     1
000E                  00031 strobedelsize   RES     1
000F                  00032 strobe_start    RES     1
0010                  00033 strobe_last     RES     1
                      00034 ;------------------------------------------------------------------------------------------
                      00035 ;   lfsr
                      00036 ;------------------------------------------------------------------------------------------
0011                  00037 start_state     RES     1
0012                  00038 lfsr_tracker    RES     1
0013                  00039 lsb             RES     1
0014                  00040 lfsrdelsize     RES     1
0015                  00041 temp            RES     1
                      00049                 include         ECH_VAR.inc     ; variables required for subroutines
                      00001 ; ECH_VAR.INC - declaration of variables used in the AK subroutines
                      00002 
0016                  00003 D_Ctr1  RES     1       ; could be more than 1 byte, e.g., for int or float
0017                  00004 D_Ctr2  RES     1       ; 1 byte (one GPR) is reserved here and below
0018                  00005 D_Ctr3  RES     1
0019                  00006 R_Old   RES     1
001A                  00007 S_Tmp           RES     1       ; scratch pad registers
001B                  00008 S_Tmp1  RES     1
                      00009 ; the above variables could be named like Tmp1 Tmp2 etc, and used in
                      00010 ; the rest of the program if necessary to save RAM (not in the ISR though)
                      00050 gr2             udata           ; GPRs for bank 2 - none used
                      00051 ; GPRs for banks 3 and 4 can be defined as above
                      00052 gr3             udata_shr       ; these variables will be put to the RAM shared among all the banks (las
                            t 16 GPRs)      
0000                  00053 W_TMP   RES             1
0001                  00054 ST_TMP  RES             1
                      00055 
                      00056 
                      00057 ; CODE sections at different addresses
                      00058                 ; entry on reset - address 0x0 is fixed by PIC architecture
                      00059 V_RES   CODE    0x0
0000   30??           00060                 MOVLW   HIGH(Main)
0001   008A           00061             MOVWF   PCLATH
0002   2???           00062                 goto    Main
MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00063                 ; entry on interrupt - address 0x4 fixed by PIC architecture
                      00064 V_INT   CODE    0x4
0004   2???           00065                 goto    ISR
                      00066                 CODE    ; conventional placement of subroutines - before the INITIALISATION
                      00067 
                      00068 
                      00069 ; subroutines prepared for the coursework
                      00070                 include ECH_SUB.INC
                      00001 ; DO NOT EDIT ! ! !
                      00002 
                      00003 ; ECH_SUB.INC - subroutines supplied for
                      00004 ; delay for 1 ms  (Del_ms)
                      00005 ; delay for 1 ms  times W (DelWms)
                      00006 ; delay for 0.1 s times W (DelWds)
                      00007 
                      00008 
                      00009 #ifdef __DDEBUG         ; to facilitate in-circuit debugging -
                      00010                                 ; all delay subroutines return immediately as below
                      00011 
                      00012 Del_ms  return
                      00013 DelWms  return
                      00014 DelWds  return
                      00015 Del_100us       return
                      00016 
                      00017 #else                   ; this is the code to provide the delays
                      00018 
                      00019 ; precise delay for 100 us
                      00020 ; uses  D_Ctr1
                      00021 ; calls nothing         
0000                  00022 Del_100us
0000   301F           00023                 movlw   D'31'
0001   00??           00024                 movwf   D_Ctr1
Message[305]: Using default destination of 1 (file).
0002   0B??           00025 D_L4    decfsz  D_Ctr1
0003   2???           00026                 goto    D_L4
0004   0000           00027                 nop
0005   0000           00028                 nop
0006   0008           00029                 return
                      00030 ; precise delay for 1 ms
                      00031 ; uses  D_Ctr1
                      00032 ; calls nothing 
0007   30F8           00033 Del_ms  movlw   D'248'  ; value tuned at the debug stage
0008   00??           00034                 movwf   D_Ctr1
0009   0000           00035 D_L1    nop
000A   0B??           00036                 decfsz  D_Ctr1, F
000B   2???           00037                 goto    D_L1
000C   0000           00038                 nop
000D   0000           00039                 nop
000E   0000           00040                 nop
000F   0008           00041                 return
                      00042 ; not precise but approximate delay for W times 1 ms
                      00043 ; uses  D_Ctr2
                      00044 ; calls Del_ms 
MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0010   00??           00045 DelWms  movwf   D_Ctr2
0011   2???           00046 D_L2    call    Del_ms
0012   0B??           00047                 decfsz  D_Ctr2, F
0013   2???           00048                 goto    D_L2
0014   0008           00049                 return
                      00050 ; not precise but approximate delay for W times 1 ds (0.1 s)
                      00051 ; uses  D_Ctr3
                      00052 ; calls DelWms 
0015   00??           00053 DelWds  movwf   D_Ctr3
0016   3064           00054 D_L3    movlw   D'100'
0017   2???           00055                 call    DelWms
0018   0B??           00056                 decfsz  D_Ctr3, F
0019   2???           00057                 goto    D_L3
001A   0008           00058                 return
                      00059 
                      00060 #endif
                      00061 
                      00062 
                      00063 ; reading the ADC with the delay for conversion
001B   149F           00064 ReadADC bsf             ADCON0, GO_DONE         ; strat the conversion
001C   1C9F           00065 RADC1   btfss   ADCON0, GO_DONE         ; test the DONE bit
001D   2???           00066                 goto    RADC1                           ; if not set, test again
001E   081E           00067                 movfw   ADRESH                          ; data ready => copy to W
001F   0008           00068                 return
                      00069 
                      00070 ; de-bouncing switches using a delay for 20 ms
                      00071 ; uses  R_Old
                      00072 ; calls DelWms 
0020                  00073 DeBounce
0020   0806           00074                 movfw   PORTB                   ; copy SwPort to W
0021   3901           00075                 andlw   B'00000001'             ; mask unused bits (one bit is in use only)
0022   00??           00076                 movwf   R_Old                   ; save data to a work register
0023   3014           00077                 movlw   D'20'
0024   2???           00078                 call    DelWms                  ; wait for 20 ms and read again
0025   0806           00079                 movfw   PORTB
0026   3901           00080                 andlw   B'00000001'             
0027   06??           00081                 xorwf   R_Old,W                 ; compare with the old value
0028   1D03           00082                 btfss   STATUS,Z
0029   2???           00083                 goto    DeBounce                ; if the value changed - do again
002A   08??           00084                 movfw   R_Old                   ; reading is stable => return it
002B   0008           00085                 return
                      00086 
                      00087 
                      00088 ; selecting one option out of four
                      00089 ; rotate the potentiometer to have the right LED on 
                      00090 ; then press the button to confirm
                      00091 ; LD4 is used to show that potentiometer input is on
002C                  00092 Select4
002C   0808           00093                 movfw   LEDs
002D   00??           00094                 movwf   S_Tmp1          ; LEDs -> Tmp1 to restore later
                      00095 
002E   0188           00096 Sel4Rd  clrf    LEDs
002F   08??           00097                 movfw   S_Tmp1
MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0030   39C0           00098                 andlw   B'11000000'
0031   0088           00099                 movwf   LEDs            ; restore 3 MSB of LEDs
0032   1608           00100                 bsf     LEDs,LD4        ; indicator on
                      00101 
                      00102 ;               get the two MSBs of the ADC value
0033   2???           00103                 call    ReadADC
0034   39C0           00104                 andlw   B'11000000'     ; mask unused bits
0035   00??           00105                 movwf   S_Tmp                   ; copy MSBs only
                      00106 
                      00107 ;               analyse two MSBs of the ADC value
0036   1B80           00108                 btfsc   S_Tmp, D'7'     ; test bit 7
0037   2???           00109                 goto    SelMSB1
0038   1B00           00110                 btfsc   S_Tmp, D'6'     ; test bit 6
0039   2???           00111                 goto    Sel1
                      00112 
003A   1408           00113 Sel0    bsf             LEDs, LD0       ; bits were 00
003B   3001           00114                 movlw   B'00000001'     ; choice 0 selected
003C   2???           00115                 goto    SelBut
                      00116                         
003D   1488           00117 Sel1    bsf             LEDs, LD1       ; bits were 01
003E   3002           00118                 movlw   B'00000010'     ; choice 1 selected
003F   2???           00119                 goto    SelBut
                      00120 
0040                  00121 SelMSB1                                         ; bit 7 was 1, test bit 6
0040   1B00           00122                 btfsc   S_Tmp, D'6'
0041   2???           00123                 goto    Sel3
                      00124 
0042   1508           00125 Sel2    bsf             LEDs, LD2       ; bits were 10
0043   3004           00126                 movlw   B'00000100'     ; choice 2 selected
0044   2???           00127                 goto    SelBut
                      00128 
0045   1588           00129 Sel3    bsf             LEDs, LD3       ; bits were 11
0046   3008           00130                 movlw   B'00001000'     ; choice 1 selected
                      00131 
0047   00??           00132 SelBut  movwf   S_Tmp                   ; W is used in DeBounce
0048   2???           00133                 call    DeBounce
0049   1806           00134                 skipPre
004A   2???           00135                 goto    Sel4Rd          ; no confirmation - start again
                      00136 
004B   0188           00137                 clrf    LEDs            ; blink the selection
004C   3003           00138                 movlw   3
004D   2???           00139                 call    DelWds
004E   08??           00140                 movfw   S_Tmp
004F   0088           00141                 movwf   LEDs
0050   3004           00142                 movlw   4
0051   2???           00143                 call    DelWds
0052   0188           00144                 clrf    LEDs
0053   3003           00145                 movlw   3
0054   2???           00146                 call    DelWds
                      00147 
0055   08??           00148                 movfw   S_Tmp1
0056   0088           00149                 movwf   LEDs            ; Tmp1 -> LEDs restore before return
                      00150 
MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0057   08??           00151                 movfw   S_Tmp                   ; return Sel4 in W
                      00152 
0058   0008           00153                 return
                      00154 
                      00155 ; selecting 2 bit binary value
                      00156 ; rotate the potentiometer to have the right LED on 
                      00157 ; then press the button to confirm
                      00158 ; LD4 is used to show that potentiometer input is on
0059                  00159 SelectB
0059   0808           00160                 movfw   LEDs
005A   00??           00161                 movwf   S_Tmp1          ; LEDs -> Tmp1 to restore later
                      00162 
005B   0188           00163 SelBRd  clrf    LEDs
005C   08??           00164                 movfw   S_Tmp1
005D   39C0           00165                 andlw   B'11000000'
005E   0088           00166                 movwf   LEDs            ; restore 3 MSB of LEDs
005F   1608           00167                 bsf             LEDs,LD4        ; indicator on
                      00168 
                      00169 ;               get the two MSBs of the ADC value
0060   2???           00170 SelL2   call    ReadADC
0061   39C0           00171                 andlw   B'11000000'     ; mask unused bits
0062   00??           00172                 movwf   S_Tmp                   ; copy MSBs only
                      00173 
                      00174 ;               rotate MSBs to LSBs
0063   1003           00175                 bcf             STATUS, C       ; clear carry flag as it is used for rotation
0064   0C??           00176                 rrf             S_Tmp, F
0065   0C??           00177                 rrf             S_Tmp, F
0066   0C??           00178                 rrf             S_Tmp, F
0067   0C??           00179                 rrf             S_Tmp, F
0068   0C??           00180                 rrf             S_Tmp, F
0069   0C??           00181                 rrf             S_Tmp, F
                      00182 
006A   0808           00183                 movfw   LEDs
006B   39FC           00184                 andlw   B'11111100'
006C   04??           00185                 iorwf   S_Tmp,W
006D   0088           00186                 movwf   LEDs
                      00187 
006E   2???           00188                 call    DeBounce
006F   1806           00189                 skipPre
0070   2???           00190                 goto    SelBRd          ; loop here until the button is pressed 
                      00191 
0071   0188           00192                 clrf    LEDs            ; blink the result
0072   3003           00193                 movlw   3
0073   2???           00194                 call    DelWds
0074   08??           00195                 movfw   S_Tmp
0075   0088           00196                 movwf   LEDs
0076   3004           00197                 movlw   4
0077   2???           00198                 call    DelWds
0078   0188           00199                 clrf    LEDs
0079   3003           00200                 movlw   3
007A   2???           00201                 call    DelWds
                      00202 
007B   08??           00203                 movfw   S_Tmp1
MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

007C   0088           00204                 movwf   LEDs            ; Tmp1 -> LEDs restore before return
                      00205 
007D   08??           00206                 movfw   S_Tmp           ; return Sel4 in W
                      00207 
007E   0008           00208                 return
                      00209                 
                      00071 
                      00014                 
                      00015 ; Place your SUBROUTINE(S) (if any) here ...  
                      00016 ;{ 
                      00017 ISR     CODE    H'20'
0020                  00018 ISR                                 ; interrupt for config mode
0020   1317           00019         bcf     CCP1CON,6           ; turn off PWM output
0021   0800           00020         movfw   B'00000000'         
0022   0095           00021         movwf   CCPR1L              ; clear the MSBs for duty cycle 
0023   08??           00022         movfw   modefinal          
0024   3C00           00023         sublw   B'00000000'
0025   1903           00024         btfsc   STATUS,Z            ; check which mode
0026   2???           00025         call    v_pwm_config        ; if pwm, call pwm_config
0027   08??           00026         movfw   modefinal
0028   3C02           00027         sublw   B'00000010'
0029   1903           00028         btfsc   STATUS,Z            ; check which mode
002A   2???           00029         call    strobe_config       ; if strobe, call strobe_config
002B   08??           00030         movfw   modefinal
002C   3C03           00031         sublw   B'00000011'
002D   1903           00032         btfsc   STATUS,Z            ; check which mode
002E   2???           00033         call    lfsr_config         ; if lfsr, call lfsr_config
                      00034         
002F   108B           00035         bcf     INTCON,1            ; reset interrupt flag
0030   1717           00036         bsf     CCP1CON,6           ; turn on PWM output 
                      00037         
0031   0009           00038         retfie          ; replace retfie with your ISR if necessary
                      00039 ;------------------------------------------------------------------------------------------
                      00040 ;------> LUT TABLES - for config <-------
                      00041 ;------------------------------------------------------------------------------------------
0032   0782           00042 LUT1    addwf   PCL,F           ; PR2 value for config selection
0033   34FF           00043         retlw   b'11111111'     ; less freq
0034   347F           00044         retlw   b'01111111'
0035   343F           00045         retlw   b'00111111'
0036   341F           00046         retlw   b'00011111'     ; more freq
                      00047         
0037   0782           00048 LUT2    addwf   PCL,F           ; store brightness of LD1 and LD2 for config selection
0038   3401           00049         retlw   b'00000001'
0039   3403           00050         retlw   b'00000011'
003A   343F           00051         retlw   b'00111111'
003B   34FF           00052         retlw   b'11111111'
                      00053 
003C   0782           00054 LUT3    addwf   PCL,F           ; store speed of strobe/lfsr for config selection
003D   341F           00055         retlw   b'00011111'
003E   343F           00056         retlw   b'00111111'
003F   347F           00057         retlw   b'01111111'
0040   34FF           00058         retlw   b'11111111'
                      00059 ;------------------------------------------------------------------------------------------
MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00060 ;------> MODE AQUISITION <-------
                      00061 ;------------------------------------------------------------------------------------------
0041                  00062 mode_select                     ; ADC aquisition
0041   1283 1303      00063         BANKSEL ADCON0  
0043   30C1           00064         MOVLW   B'11000001'     ;ADC Frc clock,
0044   009F           00065         MOVWF   ADCON0          ;AN0, On        
                      00066 
0045   2???           00067         CALL    Del_ms          ;Acquisiton delay
                      00068 
0046   149F           00069         BSF     ADCON0,GO       ;Start conversion
0047   189F           00070         BTFSC   ADCON0,GO       ;Is conversion done'
0048   2???           00071         GOTO    $-1             ;No, test again
                      00072 
0049   1283 1303      00073         BANKSEL ADRESH  
004B   081E           00074         MOVF    ADRESH,W        ;Read upper 8 bits
004C   39C0           00075         ANDLW   B'11000000'     ;get the 2 MSB
004D   00??           00076         MOVWF   modestart
004E   1003           00077         bcf     STATUS, C       ; clear carry flag as it is used for rotation
004F   0C??           00078         rrf     modestart,f
0050   0C??           00079         rrf     modestart,f
0051   0C??           00080         rrf     modestart,f
0052   0C??           00081         rrf     modestart,f
0053   0C??           00082         rrf     modestart,f
0054   0C??           00083         rrf     modestart,w     ; need to rotate 2 MSBs to 2 LSBs
0055   00??           00084         movwf   modefinal
0056   0008           00085         return
                      00086 ;------------------------------------------------------------------------------------------
                      00087 ;------> CONFIG ROUTINES <-------
                      00088 ;------------------------------------------------------------------------------------------
0057                  00089 v_pwm_config                    ; v_pwm configuration
0057   1708           00090         bsf     LEDs,LD6        ; to show 1st config option
0058   2???           00091         call    SelectB         ; user input
0059   00??           00092         movwf   config11        ; store user input
005A   1308           00093         bcf     LEDs,LD6        
005B   1788           00094         bsf     LEDs,LD7        ; to show 2nd config option
005C   2???           00095         call    SelectB         ; user input
005D   00??           00096         movwf   config12        ; store user input
005E   1708           00097         bsf     LEDs,LD6
005F   1788           00098         bsf     LEDs,LD7        ; to show 3rd config option
0060   2???           00099         call    SelectB         ; user input
0061   00??           00100         movwf   config13        ; store user input
0062   1308           00101         bcf     LEDs,LD6
0063   1388           00102         bcf     LEDs,LD7        ; end so clear config counter
0064   0008           00103         return 
0065                  00104 strobe_config
0065   1708           00105         bsf     LEDs,LD6        ; to show 1st config option
0066   2???           00106         call    SelectB         ; user input
0067   00??           00107         movwf   config21        ; store user input
0068   1308           00108         bcf     LEDs,LD6
0069   1788           00109         bsf     LEDs,LD7        ; to show 2nd config option
006A   2???           00110         call    SelectB         ; user input
006B   00??           00111         movwf   config22        ; store user input
006C   1388           00112         bcf     LEDs,LD7        ; end so clear config counter
MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

006D   0008           00113         return
006E                  00114 lfsr_config
006E   0188           00115         clrf    LEDs            ; reset outputs from previous mode
006F   1708           00116         bsf     LEDs,LD6        ; to show 1st config option
0070   2???           00117         call    SelectB         ; user input
0071   00??           00118         movwf   config31        ; store user input
0072   0008           00119         return                  
                      00120 ;------------------------------------------------------------------------------------------
                      00121 ;------> PWM MODE <-------
                      00122 ;------------------------------------------------------------------------------------------
0073   3000           00123 v_pwm   movlw   B'0000000'
0074   0088           00124         movwf   LEDs            ; clear LEDs
0075   08??           00125         movfw   config11           
0076   2???           00126         call    LUT1
0077   1683 1303      00127         banksel PR2
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0079   0092           00128         movwf   PR2             ; set PWM period
                      00129         
007A   1283 1303      00130         banksel CCP1CON
007C   304C           00131         movlw   b'01001100'     
007D   0097           00132         movwf   CCP1CON         ; 01 is full bridge output, xx LSBs, 1100 PWM mode active high
                      00133         
007E   08??           00134         movfw   config12
007F   2???           00135         call    LUT2
0080   00??           00136         movwf   dc              ; set 1st duty cycle
                      00137         
0081   08??           00138         movfw   config13
0082   2???           00139         call    LUT2
0083   00??           00140         movwf   otherdc         ; set 2nd duty cycle
                      00141         
0084   08??           00142         movfw   dc
0085   02??           00143         subwf   otherdc,w       ; wreg = dc - otherdc
0086   1C03           00144         btfss   STATUS,C
0087   2???           00145         goto    dcbigger        ; checks for bigger variable, goes to respective loop to set variables 
0088                  00146 otherdcbigger                   
0088   08??           00147         movf    otherdc,w       
0089   00??           00148         movwf   bigdc           ; store bigger value in this variable
008A   08??           00149         movf    dc,w
008B   00??           00150         movwf   smalldc         ; store smaller value in this variable
008C   2???           00151         goto    v_pwmloop       ; start pwm loop
008D                  00152 dcbigger
008D   08??           00153         movfw   dc
008E   00??           00154         movwf   bigdc           ; store bigger value in this variable
008F   08??           00155         movfw   otherdc
0090   00??           00156         movwf   smalldc         ; store smaller value in this variable
0091                  00157 v_pwmloop                       ; start pwm loop
0091   08??           00158         movfw   bigdc
0092   00??           00159         movwf   pwmc
0093   3027           00160         movlw   B'00100111'
0094   1283 1303      00161         banksel CCPR1L          
0096   0095           00162         movwf   CCPR1L          ; input inital duty cycle
0097   2???           00163 decrdc  call    Del_ms          ; decr duty cycle and loop till equal to smaller duty cycle
0098   08??           00164         movfw   pwmc
MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0099   0095           00165         movwf   CCPR1L
Message[305]: Using default destination of 1 (file).
009A   03??           00166         decf    pwmc
009B   08??           00167         movfw   smalldc
009C   02??           00168         subwf   pwmc,w
009D   1D03           00169         btfss   STATUS,Z        ; check if current duty cycle same as smaller duty cycle
009E   2???           00170         goto    decrdc          ; if not same redo loop, if same go to incrdc loop
009F   2???           00171 incrdc  call    Del_ms          ; incr duty cycle and loop till equal to first duty cycle
00A0   08??           00172         movfw   pwmc
00A1   0095           00173         movwf   CCPR1L
Message[305]: Using default destination of 1 (file).
00A2   0A??           00174         incf    pwmc
00A3   08??           00175         movfw   pwmc
00A4   02??           00176         subwf   bigdc,w         
00A5   1D03           00177         btfss   STATUS,Z        ; check if current duty cycle same as bigger duty cycle
00A6   2???           00178         goto    incrdc          ; if not same redo loop, if same exit loop
                      00179         
00A7   0008           00180         return
                      00181 ;------------------------------------------------------------------------------------------
                      00182 ;------> STROBE MODE <-------
                      00183 ;------------------------------------------------------------------------------------------
00A8   1317           00184 strobe  bcf     CCP1CON,6       ; turn off PWM output
00A9                  00185 foward_loop
00A9   0800           00186         movfw   B'00000000'
00AA   0095           00187         movwf   CCPR1L          ; clear the MSBs for duty cycle 
00AB   08??           00188         movfw   config21
00AC   2???           00189         call    LUT3
00AD   00??           00190         movwf   strobedelsize   ; set speed of strobe
00AE                  00191 delay_loop                      
Message[305]: Using default destination of 1 (file).
00AE   03??           00192         decf    strobedelsize
00AF   2???           00193         call    Del_ms
00B0   2???           00194         call    Del_ms
00B1   08??           00195         movfw   strobedelsize
00B2   3C00           00196         sublw   b'00000000'
00B3   1D03           00197         btfss   STATUS,Z        ; checks if delay value at 0
00B4   2???           00198         goto    delay_loop      ; if not 0 redo loop, if 0 exit
                      00199         
00B5   08??           00200         movfw   strobe_tracker  
00B6   0088           00201         movwf   LEDs            ; output strobe_tracker to LEDs
                      00202         
00B7   2???           00203         call    mode_select     ; check if mode has changed   
00B8   3C02           00204         sublw   B'00000010'     
00B9   1D03           00205         btfss   STATUS,Z        ; if mode hasnt changed continue with code
00BA   2???           00206         goto    strobe_end      ; if mode changed go to end loop for strobe
                      00207         
00BB   0D??           00208         rlf     strobe_tracker,f    ; move LED to next position
00BC   1000           00209         bcf     strobe_tracker,0    ; clear new shifted bit of LEDs incase its 1
                      00210         
00BD   08??           00211         movfw   strobe_tracker   
Warning[202]: Argument out of range.  Least significant bits used.
00BE   3C00           00212         sublw   b'100000000'    
00BF   1D03           00213         btfss   STATUS,Z        ; check if end of foward loop
MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00C0   2???           00214         goto    foward_loop     ; if end of foward loop go to next section, if not end redo loop 
                      00215         
00C1   08??           00216         movfw   config22        ; check if foward or reverse mode selected
00C2   3C01           00217         sublw   B'01'           ; 
00C3   1D03           00218         btfss   STATUS,Z        ; if reverse mode selected, go to reverse loop
00C4   2???           00219         goto    foward_return   ; if not reverse mode selected, go to foward loop
                      00220         
00C5   3080           00221         movlw   B'10000000'     
00C6   00??           00222         movwf   strobe_tracker  ; fix strobe positioning
                      00223         
00C7                  00224 reverse_loop
00C7   08??           00225         movfw   config21
00C8   2???           00226         call    LUT3
00C9   00??           00227         movwf   strobedelsize   ; set speed of strobe
00CA   08??           00228         movfw   strobe_tracker
00CB   0088           00229         movwf   LEDs            ; update LED position
                      00230         
00CC   2???           00231         call    mode_select     ; check if mode has changed 
00CD   3C02           00232         sublw   B'00000010'
00CE   1D03           00233         btfss   STATUS,Z        ; if mode hasnt changed continue with code
00CF   2???           00234         goto    strobe_end      ; if mode changed go to end loop for strobe
                      00235         
00D0   0C??           00236         rrf     strobe_tracker,f    ; move LED to next position
00D1   1380           00237         bcf     strobe_tracker,7    ; clear new shifted bit of LEDs incase its 1
00D2                  00238 delay_loop2
Message[305]: Using default destination of 1 (file).
00D2   03??           00239         decf    strobedelsize   ; 
00D3   2???           00240         call    Del_ms
00D4   2???           00241         call    Del_ms
00D5   08??           00242         movfw   strobedelsize
00D6   3C00           00243         sublw   b'00000000'
00D7   1D03           00244         btfss   STATUS,Z        ; checks if delay value at 0
00D8   2???           00245         goto    delay_loop2     ; if not 0 redo loop, if 0 exit
                      00246         
00D9   08??           00247         movfw   strobe_tracker
00DA   3C01           00248         sublw   b'00000001'     
00DB   1D03           00249         btfss   STATUS,Z        ; check if end of reverse loop 
00DC   2???           00250         goto    reverse_loop    ; if end go to strobe_end, if not end go to reverse_loop
00DD                  00251 strobe_end      
00DD   1717           00252         bsf     CCP1CON,6       ; turn off PWM output
00DE   0008           00253         return
00DF                  00254 foward_return   
00DF   3001           00255         movlw   B'00000001'     
00E0   00??           00256         movwf   strobe_tracker  ; reset LED position for new cycle
00E1   0008           00257         return
                      00258 ;------------------------------------------------------------------------------------------
                      00259 ;------> LFSR MODE <-------
                      00260 ;------------------------------------------------------------------------------------------
00E2   1317           00261 lfsr    bcf     CCP1CON,6       ; turn off PWM output
00E3   0800           00262         movfw   B'00000000'
00E4   0095           00263         movwf   CCPR1L          ; clear the MSBs for duty cycle 
00E5   08??           00264         movfw   config31
00E6   2???           00265         call    LUT3
MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00E7   00??           00266         movwf   lfsrdelsize     ; set speed of lfsr
00E8                  00267 delay_loop3
Message[305]: Using default destination of 1 (file).
00E8   03??           00268         decf    lfsrdelsize
00E9   2???           00269         call    Del_ms
00EA   08??           00270         movfw   lfsrdelsize
00EB   3C00           00271         sublw   b'00000000'
00EC   1D03           00272         btfss   STATUS,Z        ; checks if delay value at 0
00ED   2???           00273         goto    delay_loop3     ; if not 0 redo loop, if 0 exit
                      00274         
00EE   08??           00275         movfw   lfsr_tracker
00EF   0088           00276         movwf   LEDs            ; update LEDs with new random number
00F0   08??           00277         movfw   lfsr_tracker    ; Move the value of 'lfsr' into the W register
00F1   3901           00278         andlw   0x01            ; Perform a bitwise AND operation with the literal value 0x01
00F2   00??           00279         movwf   lsb             ; Move the result of the AND operation into 'lsb'
                      00280         
Message[305]: Using default destination of 1 (file).
00F3   0C??           00281         rrf     lfsr_tracker    ; start of the next random number calculation
00F4   1C00           00282         btfss   lsb,0
00F5   2???           00283         goto    lfsr
00F6   08??           00284         movfw   lfsr_tracker
00F7   3A8C           00285         xorlw   B'10001100'
00F8   00??           00286         movwf   lfsr_tracker    ; end of next random number calculation
                      00287         
00F9   1717           00288         bsf     CCP1CON,6       ; turn on PWM output
00FA   0008           00289         return
                      00290 ;} end of your subroutines
                      00291 
                      00292 
                      00293 ; Provided code - do not edit  
00FB   0000           00294 Main    nop
                      00295 #include ECH_INIT.inc
                      00001 ; DO NOT EDIT ! ! !
                      00002 
                      00003 ; initialisation of the pins according to board wiring   
                      00004 ;{
                      00005 ; set all outputs to zero before configuring the pinsLEDs to off before configuring the pins
00FC   0185           00006                 clrf    PORTA
00FD   0186           00007                 clrf    PORTB
00FE   0187           00008                 clrf    PORTC
00FF   0188           00009                 clrf    PORTD
0100   0189           00010                 clrf    PORTE
                      00011 
0101   1683 1703      00012                 banksel ANSELH                  ; switch to bank 4
                      00013 
                      00014 ; disable analogue inputs except for RA0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0103   0189           00015                 clrf    ANSELH
0104   3001           00016                 movlw   B'00000001'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0105   0088           00017                 movwf   ANSEL
                      00018 
0106   1683 1303      00019                 banksel TRISA                   ; switch to bank 1
MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00020 
                      00021 ; init unused pins for PORTA (outputs)
0108   3001           00022                 movlw   B'00000001'     ; this constant was in W already, shown here for clarity
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0109   0085           00023                 movwf   TRISA
                      00024 
                      00025 ; init PORTB (RB0 for input, unused pins for output)
010A   3001           00026                 movlw   B'00000001'     ; this constant was in W already, shown here for clarity
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
010B   0086           00027                 movwf   TRISB
                      00028 
                      00029 ; init PORTC (all pins unused - for output)
010C   3000           00030                 movlw   B'00000000'     ; this constant was in W already, shown here for clarity
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
010D   0087           00031                 movwf   TRISC
                      00032 
                      00033 ; init LEDs (PORTD to outputs)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
010E   0188           00034                 clrf    TRISD
                      00035 
                      00036 ; init PORTE (four pins present, RE3 is MCLR anyway; all outputs for simplicity)
010F   30F8           00037                 movlw   B'11111000'     
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0110   0089           00038                 movwf   TRISE
                      00039 
                      00040 ; init the TMR0 keeping the two MSBs of OPTION_REG the same
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0111   0801           00041                 movfw   OPTION_REG
0112   3908           00042                 andlw   B'00001000'             ; prescaler to WDT to have Tcy clock for TMR0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0113   0081           00043         movwf   OPTION_REG       
                      00044 
                      00045 ; init the ADC - need bank 0 and 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0114   019F           00046                 clrf    ADCON1          ; Left justified, refernces: Vss and Vdd
0115   1283 1303      00047                 banksel PORTD           ; switch back to bank 0
0117   3041           00048                 movlw   B'01000001'     ; Fosc/8, AN0, enable 
0118   009F           00049                 movwf   ADCON0
                      00050 ;}
                      00051 
                      00052 ;       
                      00053 ; blink LEDs for 0.3 s for testing   
                      00054 ;{
0119   30FF           00055                 movlw   B'11111111'     ; all LEDs ON
011A   0088           00056                 movwf   LEDs
011B   3003           00057                 movlw   D'3'            ; delay
011C   2???           00058                 call    DelWds
011D   0188           00059                 clrf    LEDs            ; all LEDs OFF
011E   3003           00060                 movlw   D'3'            ; delay
011F   2???           00061                 call    DelWds
                      00062 ;}
                      00063 ;
                      00064         
MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00296 
                      00297 ; Place your INITIALISATION code (if any) here ...   
                      00298 ;{ ***          ***************************************************
                      00299 ; e.g.,         movwf   Ctr1 ; etc
                      00300 ;------------------------------------------------------------------------------------------
                      00301 ;   mode_config initialisation - to enter configuration mode
                      00302 ;------------------------------------------------------------------------------------------
0120   1683 1303      00303     banksel OPTION_REG
0122   3040           00304     movlw   b'01000000'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0123   0081           00305     movwf   OPTION_REG  ; Set interrupt edge select to rising edge (OPTION_REG<INTEDG> = 0)
                      00306 
0124   1283 1303      00307     banksel INTCON
0126   178B           00308     bsf     INTCON,GIE  ; configure global interrupt enable (INTCON<GIE> = bit 7)
0127   160B           00309     bsf     INTCON,INTE ; enable external interrupt 0 (INTE) (INTCON<INTE> = bit 4)
                      00310     
0128   1683 1303      00311     banksel TRISD       
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
012A   1388           00312     bcf     TRISD,7     ; make P1D output pin using TRISD-RD7
                      00313     
012B   1283 1303      00314     banksel T2CON           ; set TMR2 prescale value and enable timer2
012D   3004           00315     movlw   b'00000100'     ; bit 2 = timer on/off, bit 1-0 = prescaler
012E   0092           00316     movwf   T2CON
                      00317     
012F   3001           00318     movlw   b'00000001'     ; initial config values for each mode
0130   00??           00319     movwf   config11
                      00320     
0131   3001           00321     movlw   b'00000001'
0132   00??           00322     movwf   config12
                      00323     
0133   3002           00324     movlw   b'00000010'
0134   00??           00325     movwf   config13
                      00326     
0135   3001           00327     movlw   b'00000001'
0136   00??           00328     movwf   config21
                      00329     
0137   3001           00330     movlw   b'00000001'
0138   00??           00331     movwf   config22
                      00332     
0139   3000           00333     movlw   b'00000000'
013A   00??           00334     movwf   config31
                      00335     
013B   30AC           00336     movlw   B'10101100'     ; move 172, but can be any non zero value
013C   00??           00337     movwf   lfsr_tracker
                      00338    
013D   3001           00339     movlw   B'00000001'     ; start or strobe LED
013E   00??           00340     movwf   strobe_tracker
                      00341     
                      00342 ;} 
                      00343 ; end of your initialisation
                      00344 
013F   0000           00345 MLoop   nop
                      00346 
MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00347 ; place your superloop code here ...  
                      00348 ;{    
0140   2???           00349     call    mode_select
                      00350     
0141   08??           00351     movfw   modefinal
0142   3C00           00352     sublw   b'00000000'
0143   1903           00353     btfsc   STATUS,Z    ; check result of adc
0144   2???           00354     call    v_pwm       ; call if mode selected
                      00355      
0145   08??           00356     movfw   modefinal
0146   3C02           00357     sublw   b'00000010'
0147   1903           00358     btfsc   STATUS,Z    ; check result of adc
0148   2???           00359     call    strobe      ; call if mode selected
                      00360     
0149   08??           00361     movfw   modefinal
014A   3C03           00362     sublw   b'00000011'
014B   1903           00363     btfsc   STATUS,Z    ; check result of adc 
014C   2???           00364     call    lfsr        ; call if mode selected 
                      00365     
                      00366 ;}      
                      00367 ; end of your superloop code
                      00368 
014D   2???           00369     goto        MLoop
                      00370 
Warning[205]: Found directive in column 1. (end)
00A4 3EFF             00371 end
MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE 17


SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ANS0                              00000000
ANS1                              00000001
ANS10                             00000002
ANS11                             00000003
ANS12                             00000004
ANS13                             00000005
ANS2                              00000002
ANS3                              00000003
ANS4                              00000004
ANS5                              00000005
ANS6                              00000006
ANS7                              00000007
ANS8                              00000000
ANS9                              00000001
ANSEL                             00000188
ANSELH                            00000189
BAUDCTL                           00000187
BCLIE                             00000003
BCLIF                             00000003
BF                                00000000
BRG0                              00000000
BRG1                              00000001
BRG10                             00000002
BRG11                             00000003
BRG12                             00000004
BRG13                             00000005
BRG14                             00000006
BRG15                             00000007
BRG16                             00000003
BRG2                              00000002
BRG3                              00000003
BRG4                              00000004
BRG5                              00000005
BRG6                              00000006
BRG7                              00000007
BRG8                              00000000
BRG9                              00000001
MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE 18


SYMBOL TABLE
  LABEL                             VALUE 

BRGH                              00000002
C                                 00000000
C1CH0                             00000000
C1CH1                             00000001
C1IE                              00000005
C1IF                              00000005
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1POL                             00000004
C1R                               00000002
C1RSEL                            00000005
C1SEN                             00000005
C2CH0                             00000000
C2CH1                             00000001
C2IE                              00000006
C2IF                              00000006
C2OE                              00000005
C2ON                              00000007
C2OUT                             00000006
C2POL                             00000004
C2R                               00000002
C2REN                             00000004
C2RSEL                            00000004
C2SYNC                            00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2CON                           0000001D
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000015
CCPR1H                            00000016
CCPR1L                            00000015
CCPR2                             0000001B
CCPR2H                            0000001C
CCPR2L                            0000001B
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE 19


SYMBOL TABLE
  LABEL                             VALUE 

CKE                               00000006
CKP                               00000004
CM1CON0                           00000107
CM2CON0                           00000108
CM2CON1                           00000109
CREN                              00000004
CSRC                              00000007
D                                 00000005
DATA_ADDRESS                      00000005
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
D_A                               00000005
D_Ctr1                            00000016
D_Ctr2                            00000017
D_Ctr3                            00000018
D_L1                              00000009
D_L2                              00000011
D_L3                              00000016
D_L4                              00000002
D_NOT_A                           00000005
DeBounce                          00000020
DelWds                            00000015
DelWms                            00000010
Del_100us                         00000000
Del_ms                            00000007
ECCPAS                            0000009C
ECCPAS0                           00000004
ECCPAS1                           00000005
ECCPAS2                           00000006
ECCPASE                           00000007
EEADR                             0000010D
EEADRH                            0000010F
EECON1                            0000018C
EECON2                            0000018D
EEDAT                             0000010C
EEDATA                            0000010C
EEDATH                            0000010E
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
F                                 00000001
FERR                              00000002
FSR                               00000004
FVREN                             00000000
GCEN                              00000007
GIE                               00000007
GO                                00000001
GO_DONE                           00000001
GO_NOT_DONE                       00000001
HTS                               00000002
MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE 20


SYMBOL TABLE
  LABEL                             VALUE 

I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCB                              00000096
IOCB0                             00000000
IOCB1                             00000001
IOCB2                             00000002
IOCB3                             00000003
IOCB4                             00000004
IOCB5                             00000005
IOCB6                             00000006
IOCB7                             00000007
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRP                               00000007
ISR                               00000020
LD0                               00000000
LD1                               00000001
LD2                               00000002
LD3                               00000003
LD4                               00000004
LD5                               00000005
LD6                               00000006
LD7                               00000007
LEDs                              00000008
LTS                               00000001
LUT1                              00000032
LUT2                              00000037
LUT3                              0000003C
MC1OUT                            00000007
MC2OUT                            00000006
MLoop                             0000013F
MSK                               00000093
MSK0                              00000000
MSK1                              00000001
MSK2                              00000002
MSK3                              00000003
MSK4                              00000004
MSK5                              00000005
MSK6                              00000006
MSK7                              00000007
Main                              000000FB
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE 21


SYMBOL TABLE
  LABEL                             VALUE 

NOT_DONE                          00000001
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_TX8                           00000006
NOT_W                             00000002
NOT_WRITE                         00000002
OERR                              00000001
OPTION_REG                        00000081
OSCCON                            0000008F
OSCTUNE                           00000090
OSFIE                             00000007
OSFIF                             00000007
OSTS                              00000003
P                                 00000004
P1M0                              00000006
P1M1                              00000007
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEN                               00000002
PIE1                              0000008C
PIE2                              0000008D
PIR1                              0000000C
PIR2                              0000000D
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PORTD                             00000008
PORTE                             00000009
PR2                               00000092
PRSEN                             00000007
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PSTRCON                           0000009D
PULSR                             00000002
MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE 22


SYMBOL TABLE
  LABEL                             VALUE 

PULSS                             00000003
PWM1CON                           0000009B
R                                 00000002
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RADC1                             0000001C
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             0000001A
RCSTA                             00000018
RD                                00000000
RD0                               00000000
RD1                               00000001
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
RE3                               00000003
READ_WRITE                        00000002
MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE 23


SYMBOL TABLE
  LABEL                             VALUE 

RP0                               00000005
RP1                               00000006
RSEN                              00000001
RX9                               00000006
RX9D                              00000000
R_NOT_W                           00000002
R_Old                             00000019
R_W                               00000002
ReadADC                           0000001B
S                                 00000003
SBOREN                            00000004
SCKP                              00000004
SCS                               00000000
SEN                               00000000
SENDB                             00000003
SMP                               00000007
SPBRG                             00000099
SPBRGH                            0000009A
SPEN                              00000007
SR0                               00000006
SR1                               00000007
SRCON                             00000185
SREN                              00000005
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPCON2                           00000091
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPMSK                            00000093
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
STRA                              00000000
STRB                              00000001
STRC                              00000002
STRD                              00000003
STRSYNC                           00000004
ST_TMP                            00000001
SWDTEN                            00000000
SYNC                              00000004
S_Tmp                             0000001A
S_Tmp1                            0000001B
Sel0                              0000003A
Sel1                              0000003D
Sel2                              00000042
Sel3                              00000045
Sel4Rd                            0000002E
MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE 24


SYMBOL TABLE
  LABEL                             VALUE 

SelBRd                            0000005B
SelBut                            00000047
SelL2                             00000060
SelMSB1                           00000040
Select4                           0000002C
SelectB                           00000059
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1GINV                            00000007
T1GIV                             00000007
T1GSS                             00000001
T1INSYNC                          00000002
T1OSCEN                           00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TMR1                              0000000E
TMR1CS                            00000001
TMR1GE                            00000006
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE 25


SYMBOL TABLE
  LABEL                             VALUE 

TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000087
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC3                            00000003
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRISD                             00000088
TRISD0                            00000000
TRISD1                            00000001
TRISD2                            00000002
TRISD3                            00000003
TRISD4                            00000004
TRISD5                            00000005
TRISD6                            00000006
TRISD7                            00000007
TRISE                             00000089
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRISE3                            00000003
TRMT                              00000001
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             00000019
TXSTA                             00000098
UA                                00000001
ULPWUE                            00000005
ULPWUIE                           00000002
ULPWUIF                           00000002
VCFG0                             00000004
VCFG1                             00000005
VR0                               00000000
VR1                               00000001
VR2                               00000002
MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE 26


SYMBOL TABLE
  LABEL                             VALUE 

VR3                               00000003
VRCON                             00000097
VREN                              00000007
VROE                              00000006
VRR                               00000005
VRSS                              00000004
W                                 00000000
WCOL                              00000007
WDTCON                            00000105
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WPUB                              00000095
WPUB0                             00000000
WPUB1                             00000001
WPUB2                             00000002
WPUB3                             00000003
WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WR                                00000001
WREN                              00000002
WRERR                             00000003
WUE                               00000001
W_TMP                             00000000
Z                                 00000002
_BOR21V                           00003EFF
_BOR40V                           00003FFF
_BOR4V_BOR21V                     00003EFF
_BOR4V_BOR40V                     00003FFF
_BOREN_NSLEEP                     00003EFF
_BOREN_OFF                        00003CFF
_BOREN_ON                         00003FFF
_BOREN_SBODEN                     00003DFF
_BOR_NSLEEP                       00003EFF
_BOR_OFF                          00003CFF
_BOR_ON                           00003FFF
_BOR_SBODEN                       00003DFF
_CONFIG1                          00002007
_CONFIG2                          00002008
_CPD_OFF                          00003FFF
_CPD_ON                           00003F7F
_CP_OFF                           00003FFF
_CP_ON                            00003FBF
_DEBUG_OFF                        00003FFF
_DEBUG_ON                         00001FFF
_DEVID1                           00002006
_EC_OSC                           00003FFB
_EXTRC                            00003FFF
_EXTRCIO                          00003FFE
_EXTRC_OSC_CLKOUT                 00003FFF
MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE 27


SYMBOL TABLE
  LABEL                             VALUE 

_EXTRC_OSC_NOCLKOUT               00003FFE
_FCMEN_OFF                        000037FF
_FCMEN_ON                         00003FFF
_FOSC_EC                          00003FFB
_FOSC_EXTRC_CLKOUT                00003FFF
_FOSC_EXTRC_NOCLKOUT              00003FFE
_FOSC_HS                          00003FFA
_FOSC_INTRC_CLKOUT                00003FFD
_FOSC_INTRC_NOCLKOUT              00003FFC
_FOSC_LP                          00003FF8
_FOSC_XT                          00003FF9
_HS_OSC                           00003FFA
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_IESO_OFF                         00003BFF
_IESO_ON                          00003FFF
_INTOSC                           00003FFD
_INTOSCIO                         00003FFC
_INTRC_OSC_CLKOUT                 00003FFD
_INTRC_OSC_NOCLKOUT               00003FFC
_ISR_0048                         00000048
_LP_OSC                           00003FF8
_LVP_OFF                          00002FFF
_LVP_ON                           00003FFF
_MCLRE_OFF                        00003FDF
_MCLRE_ON                         00003FFF
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FEF
_WDTE_OFF                         00003FF7
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FF7
_WDT_ON                           00003FFF
_WRT_1FOURTH                      00003BFF
_WRT_256                          00003DFF
_WRT_HALF                         000039FF
_WRT_OFF                          00003FFF
_XT_OSC                           00003FF9
__16F887                          00000001
bigdc                             0000000B
config11                          00000000
config12                          00000001
config13                          00000002
config21                          00000003
config22                          00000004
config31                          00000005
dc                                00000008
dcbigger                          0000008D
decrdc                            00000097
delay_loop                        000000AE
delay_loop2                       000000D2
delay_loop3                       000000E8
MPASM 5.87                       PROGRAM.ASM   5-14-2023  10:36:41         PAGE 28


SYMBOL TABLE
  LABEL                             VALUE 

foward_loop                       000000A9
foward_return                     000000DF
incrdc                            0000009F
lfsr                              000000E2
lfsr_config                       0000006E
lfsr_tracker                      00000012
lfsrdelsize                       00000014
lsb                               00000013
mode_select                       00000041
modefinal                         00000006
modestart                         00000007
otherdc                           00000009
otherdcbigger                     00000088
pwmc                              0000000C
reverse_loop                      000000C7
skipPre                           btfsc PORTB,RB0
skipRel                           btfss PORTB,RB0
smalldc                           0000000A
start_state                       00000011
strobe                            000000A8
strobe_config                     00000065
strobe_end                        000000DD
strobe_last                       00000010
strobe_start                      0000000F
strobe_tracker                    0000000D
strobedelsize                     0000000E
temp                              00000015
v_pwm                             00000073
v_pwm_config                      00000057
v_pwmloop                         00000091

Errors   :     0
Warnings :     2 reported,     0 suppressed
Messages :    20 reported,     0 suppressed

